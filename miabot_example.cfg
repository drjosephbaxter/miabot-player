# miabot.cfg
# author - Joseph Baxter {joseph.lee.baxter@gmail.com}

driver
(
  name "miabot"
  plugin "miabot.so"
  #requires ["tracker:::position2d:2"]
  provides ["odometry:::position2d:0"
	    "sonar:0"
	    "photodiode:::sonar:1"
	    "blobfinder:0"]
 
  # are you using the overhead tracking system
  tracker 0       

  # are you using a dongle (1) or the router (0)
  type 0

  # router settings
  router "village1"
  port 5000

  # dongle settings
  mac "00:07:80:80:11:25"

  # sonar settings
  ping 255
  ping_rate 200
  buffer_sonar 1

  #enc_rate 250

  # socket settings
  bt_wait 260000
 
  # gripper settings - relative to the dimensions of the object to be gripped
  #open_arg 0
  #close_arg 185 # demo object
  #down_arg 85	
  #up_arg 150
 
  # camera settings

  set_cam 0
  auto_white 1
  auto_adj 1
  light_filt 0
  num_blobs 1
  redmin0 128
  greenmin0 16
  bluemin0 16
  redmax0 176
  greenmax0 64
  bluemax0 48
  #redmin1 208
  #greenmin1 112
  #bluemin1 16
  #redmax1 240
  #greenmax1 144
  #bluemax1 48
  #redmin2 0
  #greenmin2 0
  #bluemin2 0
  #redmax2 0
  #greenmax2 0
  #bluemax2 0
  #redmin3 0
  #greenmin3 0
  #bluemin3 0
  #redmax3 0
  #greenmax3 0
  #bluemax3 0
  #redmin4 0
  #greenmin4 0 
  #bluemin4 0
  #redmax4 0
  #greenmax4 0
  #bluemax4 0
  #redmin5 0
  #greenmin5 0 
  #bluemin5 0
  #redmax5 0
  #greenmax5 0 
  #bluemax5 0 
  #redmin6 0
  #greenmin6 0
  #bluemin6 0
  #redmax6 0
  #greenmax6 0
  #bluemax6 0
  #redmin7 0
  #greenmin7 0
  #bluemin7 0
  #redmax7 0
  #greenmax7 0
  #bluemax7 0
)

#driver
#(
#  name "tracker"
#  plugin "tracker.so"
#  provides ["tracker:::position2d:2"]
#  global_server "grishnakh"
#  global_port "9000"
#  socket_wait 260000
#  x_conv 1.62
#  y_conv 2.46
#  x_res 1200
#  y_res 2600

#)

#driver
#(
#  name "mapfile"
#  provides ["6665:map:0"]
#  filename "/home/jlb/maps/arena10.pgm"	
#  resolution 0.015
#)

#driver
#(
#  name "vfh"
#  provides ["6665:position2d:1"]
#  requires ["6665:position2d:0" "6665:sonar:0"]
#  safety_dist_0ms 0.04	

#  distance_epsilon 0.1
#  angle_epsilon 10
#  max_speed 0.1
#  min_turnrate 5
#  max_turnrate_0ms 10
#  max_acceleration 0.05
   
#)

#driver
#(
#  name "wavefront"
#  provides ["6665:planner:0"]
#  requires ["output::6665:position2d:1" "input::6665:position2d:0" "6665:map:0"]
#  safety_dist 0.03
#  max_radius 0.2
#  distance_epsilon 0.10
#  angle_epsilon 20
#  replan_dist_thresh 0.2
#  replan_min_time 10
#  #dist_penalty 20
#  add_rotational_waypoints 4	
#)

#driver
#(
#  name "nd"
#  provides ["position2d:1"]
#  requires ["output:::position2d:0" "input:::position2d:0" "sonar:0"]

#  max_speed [0.1 10]
#  min_speed [0.02 5]
#  goal_tol [0.075 15]
#  wait_on_stall 1

#  rotate_stuck_time 30.0
#  translate_stuck_time 30.0
#  translate_stuck_dist 0.01
#  translate_stuck_angle 5

#  avoid_dist 0.30
#  safety_dist 0.03

#  sonar_bad_transducers [1 6 7] # rear sonars not needed
#  sonar_buffer 1
#)